---
name: SPDK per-patch common tests

# Workflow intended to run tests which can be executed using standard
# Github runners, without any hardware-specific dependencies.

on:
  workflow_dispatch:
    inputs:
      gerrit_ref:
        description: 'Gerrit refspec to test following refs/changes/${change_number: -2}/${change_number}/${patch_set} format'
        required: false
        type: string
        default: ''
  workflow_call:
    inputs:
      client_payload:
        required: false
        type: string
        default: ''

env:
  spdk_path: './spdk'
jobs:
  checkout_spdk:
    runs-on: ubuntu-latest
    env:
      gerrit_ref: ${{ inputs.client_payload != '' && fromJson(inputs.client_payload).patchSet.ref || inputs.gerrit_ref }}
    steps:
      # Required to use locally defined actions
    - name: Checkout the spdk-ci repo locally
      uses: actions/checkout@v4.1.7
    - name: Prepare SPDK repo by checking out from Gerrit
      uses: ./.github/actions/checkout_gerrit
      with:
        gerrit_ref: ${{ env.gerrit_ref }}
        spdk_path: ${{ env.spdk_path }}
    - name: Create repository tarball
      run: tar -C ${{ env.spdk_path }} -czf spdk.tar.gz .
    - name: Upload the repository tarball as an artifact
      uses: actions/upload-artifact@v4.4.0
      with:
        name: repo-spdk
        path: spdk.tar.gz

    - name: Checkout the spdk-abi repo
      uses: actions/checkout@v4.1.7
      with:
        repository: 'spdk/spdk-abi'
        path: './spdk-abi'
        fetch-depth: '0'
        fetch-tags: 'true'
    - name: Create abi tarball
      run: tar -C './spdk-abi' -czf spdk-abi.tar.gz .
    - name: Upload the abi tarball as an artifact
      uses: actions/upload-artifact@v4.4.0
      with:
        name: repo-spdk-abi
        path: spdk-abi.tar.gz

  select_vm_image:
    runs-on: ubuntu-latest
    env:
      artifact_name: "vm-image-fedora_40_x86_64"
    steps:
    - name: Select latest qcow2 artifact
      id: get_artifact_id
      # TODO: implement actual pagination
      # TODO: make it a composite action for reuse
      run: |
        ARTIFACT_ID=$(curl -L --user ${{ github.actor }}:${{ github.token }} \
        --header "Accept: application/vnd.github.v3+json" \
        "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?name=${{ env.artifact_name }}&per_page=100" \
        | jq -r '.artifacts | map(select(.name == "${{ env.artifact_name }}")) | sort_by(.updated_at) | .[-1].workflow_run.id')
        echo "artifact_id=$ARTIFACT_ID" >> "$GITHUB_OUTPUT"
    outputs:
      artifact_id: ${{ steps.get_artifact_id.outputs.artifact_id }}

  autorun_container:
    name: ${{ matrix.workflow }}
    needs:
    - checkout_spdk
    - select_vm_image
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        workflow:
        - check-format-container-autotest
    container:
      image: ghcr.io/${{ github.repository_owner }}/spdk-ci:poc

    steps:
    - name: Resolve doubious ownership
      run: |
        git config --global --add safe.directory '*'

    - name: Checkout CI repository
      uses: actions/checkout@v4.1.7
      with:
        path: ci

    - name: Download the SPDK repository
      uses: actions/download-artifact@v4.1.8
      with:
        name: repo-spdk

    - name: Download the SPDK ABI repository
      uses: actions/download-artifact@v4.1.8
      with:
        name: repo-spdk-abi

    - name: Extract the SPDK repository
      run: |
        tar xzf spdk.tar.gz --strip 1
        tar xzf spdk-abi.tar.gz --strip 1

    - name: Run ${{ matrix.workflow }}
      # Obviously hardcoded too much
      run: |
        rootdir=$(pwd)
        source ./test/common/autobuild_common.sh ./ci/cijoe/configs/autorun_configs/check-format-container-autotest.conf
        check_format

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.4.0
      if: always()
      with:
        path: ../output
        name: common-job-${{ matrix.workflow }}

  autorun:
    name: ${{ matrix.workflow }}
    needs:
    - checkout_spdk
    - select_vm_image
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        workflow:
        - nvme-vm-autotest
        - raid-vm-autotest
        - bdev-vm-autotest
        - nvmf-tcp-vm-autotest
        - nvmf-tcp-uring-vm-autotest
        - unittest-gcc-container-autotest
        - release-build-gcc-container-autotest
        - doc-container-autotest
        - build-files-container-autotest
        - scan-build-container-autotest
        - check-so-deps-container-autotest
        include:
        - nvme_setup: "default"
        - workflow: ftl-vm-autotest
          nvme_setup: "ftl"
    env:
      REPOSITORY_TARBALL_PATH: ${{ github.workspace }}/spdk.tar.gz
      ABI_TARBALL_PATH: ${{ github.workspace }}/spdk-abi.tar.gz
      CI_CFGS_REPOSITORY_PATH: ${{ github.workspace }}/ci/cijoe/configs/autorun_configs
      NVME_SETUP: ${{ matrix.nvme_setup }}
    container:
      image: ghcr.io/refenv/cijoe-docker:v0.9.50
      options: --device=/dev/kvm

    steps:
    - name: Setup PATH
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Checkout CI repository
      uses: actions/checkout@v4.1.7
      with:
        path: ci

    - name: Download the SPDK repository
      uses: actions/download-artifact@v4.1.8
      with:
        name: repo-spdk

    - name: Download the SPDK ABI repository
      uses: actions/download-artifact@v4.1.8
      with:
        name: repo-spdk-abi

    - name: Extract the SPDK repository
      run: |
        tar xzf spdk.tar.gz --strip 1
        tar xzf spdk-abi.tar.gz --strip 1

    - name: Restore qcow2 image from cache
      id: restore-qcow2
      uses: actions/cache/restore@v4
      with:
        path: fedora_40_x86_64.qcow2
        key: vm-image-fedora_40_x86_64

    - name: Download VM Qcow2 image artifact
      uses: actions/download-artifact@v4.1.8
      if: ${{ hashFiles('fedora_40_x86_64.qcow2') == '' }}
      with:
        name: vm-image-fedora_40_x86_64
        github-token: ${{ github.token }}
        run-id: ${{ needs.select_vm_image.outputs.artifact_id }}

    - name: qemu-guest, provision
      run: |
        cd ci/cijoe
        cijoe guest_initialize guest_start guest_check tgz_transfer abi_transfer ci_configs_transfer tgz_unpack output_create \
        --monitor \
        --config configs/qemuhost-with-guest-fedora-40.toml \
        --workflow workflows/autorun_in_qemu.yaml \
        --output report_${{ matrix.workflow }}_prep_guest

    - name: qemu-guest, ${{ matrix.workflow }}
      run: |
        cd ci/cijoe
        cijoe ${{ matrix.workflow }} \
        --monitor \
        --config configs/qemuhost-with-guest-fedora-40.toml \
        --workflow workflows/autorun_in_qemu.yaml \
        --output report_${{ matrix.workflow }}

    - name: qemu-guest, cleanup
      if: always()
      run: |
        cd ci/cijoe
        cijoe output_listing retrieve_autorun_output guest_shutdown \
        --monitor \
        --config configs/qemuhost-with-guest-fedora-40.toml \
        --workflow workflows/autorun_in_qemu.yaml \
        --output report_${{ matrix.workflow }}_cleanup

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4.4.0
      if: always()
      with:
        path: /tmp/autorun_output
        name: common-job-${{ matrix.workflow }}

    - name: Upload Report
      uses: actions/upload-artifact@v4.4.0
      if: always()
      with:
        path: |
          ci/cijoe/report_${{ matrix.workflow }}
          ci/cijoe/report_${{ matrix.workflow }}_cleanup
          ci/cijoe/report_${{ matrix.workflow }}_prep_guest
        name: common-cijoe-${{ matrix.workflow }}
